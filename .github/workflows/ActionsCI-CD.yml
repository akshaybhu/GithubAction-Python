name: Deploy Python Web App to AWS EC2 instance

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    types: [closed]
    branches:
      - staging
      - main
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Tests
        id: tests
        run: pytest --junitxml=test-results.xml

      - name: Build
        if: success()
        run: |
          echo "Building the application..."
          # Add your build steps here
          # Example: python setup.py build

  deploy-staging:
    needs: build
    if: |
      (github.ref == 'refs/heads/staging' && github.event_name == 'push') ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && 
       github.event.pull_request.base.ref == 'staging')
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SSH into STAGING host and Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.PEM_KEY }}
          script: |
            cd GithubAction-Python
            git config --global --add safe.directory /home/***/GithubAction-Python
            git pull origin staging
            pip install -r requirements.txt
            nohup python3 app.py > app.log 2>&1 &

            
  promote-to-main:
    needs: deploy-staging
    if: |
      success() && 
      github.event_name == 'pull_request' && 
      github.event.pull_request.merged == true && 
      github.event.pull_request.base.ref == 'staging'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR to main
        uses: peter-evans/create-pull-request@v5
        with:
          title: 'Promote staging to main'
          body: 'Automated PR to promote changes from staging to main'
          branch: promote-to-main
          base: main
          labels: automated-pr

  deploy-production:
    needs: build
    if: |
      (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && 
       github.event.pull_request.base.ref == 'main')
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SSH into PROD host and Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PEM_KEY }}
          script: |
            cd GithubAction-Python
            git config --global --add safe.directory /home/***/GithubAction-Python
            git pull origin main
            pip install -r requirements.txt
            nohup python3 app.py > app.log 2>&1 &
